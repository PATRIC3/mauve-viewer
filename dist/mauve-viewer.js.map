{"version":3,"sources":["webpack://MauveViewer/webpack/bootstrap","webpack://MauveViewer/./src/colors.js","webpack://MauveViewer/./src/container.html","webpack://MauveViewer/./src/consts.js","webpack://MauveViewer/./src/track.js","webpack://MauveViewer/./src/track-ctrl.js","webpack://MauveViewer/./src/cursor.js","webpack://MauveViewer/./src/backbone.js","webpack://MauveViewer/./src/mauve-viewer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","schemeCategory20","marginTop","trackOffset","track_Track","Track","params","_classCallCheck","this","d3","svg","hidden","id","label","width","xLength","regions","yPos","x","xAxis","gX","track","render","_createClass","_this","hiddenTrack","scaleLinear","domain","range","axisBottom","ticks","tickSize","tickFormat","format","g","append","attr","concat","text","addRegions","_this2","numOfLCBs","length","selectAll","data","enter","groupID","start","_getRegionYPos","strand","end","colors","_this3","console","log","srcEvent","event","sourceEvent","newScale","transform","rescaleX","scale","type","_panRegions","_scaleRegions","zoomScale","copy","trackIdx","strandDirection","yPosOffset","newX","scaleToUse","cb","_this4","getScale","xPos","invert","transition","tween","interpolate","min","max","Math","floor","random","btnStyle","track_ctrl_TrackCtrl","TrackCtrl","track_ctrl_classCallCheck","container","trackCount","ctrls","isReference","onMoveUp","onMoveDown","onSetReference","onHide","onShow","init","track_ctrl_createClass","destroy","mvPos","querySelector","getBoundingClientRect","relativeTop","top","ele","node","document","createElement","setAttribute","style","left","height","position","_addMainButtons","appendChild","_this$ctrls","_getButtons","upBtn","downBtn","refBtn","hideBtn","classList","add","title","innerHTML","disabled","onclick","moveTrackUp","hideTrack","refTrack","moveTrackDown","showBtn","showTrack","_selectNewRef","_getShowButton","querySelectorAll","forEach","remove","oldID","newID","newCtrlWasActive","oldCtrl","newCtrl","contains","cursor_Cursor","Cursor","cursor_classCallCheck","tracks","zoom","hoverXPos","hoverTrackID","hoverLCBID","scales","relativeXs","hoverLines","cursor_createClass","line","push","resetHover","on","trackID","lcbID","lines","lengthNode","ntPosNode","self","clientX","clientY","elementFromPoint","select","tagName","mouse","lcb_idx","hoverStrand","round","relXPos","each","nextXPos","diff","parentNode","relatedTarget","backbone_BackBone","BackBone","backbone_classCallCheck","backbone_createClass","midSets","lcbs","lcbMids","getZoomScale","y","lcbHeight","lineFunction","set","datum","insert","map","mauve_viewer_MauveViewer","MauveViewer","_ref","labels","mauve_viewer_classCallCheck","hiddenTracks","backbone","cursor","getGenomeRegions","genomeRegions","keys","setReference","container_default","a","rendered","initControls","apply","_toConsumableArray","region","rect","scaleExtent","translateExtent","rescaleAxis","filter","ctrlKey","axises","gXs","xScales","isHidden","includes","posDict","reset","zoomIdentity","swapID","swapTrack","swapBackbones","lcb","sort","b","noRerender","flipped","splice","indexOf","_ref2","shiftX","complete","shift","zoomTransform","maxRows","regionID","index","regionCount","lcbCount","toggle","evt","target","matches","dds","getElementsByClassName","Array","from","dd"],"mappings":"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","file":"mauve-viewer.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","\nconst schemeCategory20 = [\n    '#1f77b4',\n    '#aec7e8',\n    '#ff7f0e',\n    '#ffbb78',\n    '#2ca02c',\n    '#98df8a',\n    '#d62728',\n    '#ff9896',\n    '#9467bd',\n    '#c5b0d5',\n    '#8c564b',\n    '#c49c94',\n    '#e377c2',\n    '#f7b6d2',\n    '#7f7f7f',\n    '#c7c7c7',\n    '#bcbd22',\n    '#dbdb8d',\n    '#17becf',\n    '#9edae5'\n]\n\nmodule.exports =  {\n    schemeCategory20\n}","module.exports = \"\\n\\n<div class=\\\"mauve-viewer\\\" style=\\\"position: relative;\\\">\\n    <div class=\\\"mv-header\\\" style=\\\"text-align: left;\\\">\\n        <h4 class=\\\"title\\\">Mauve Viewer (Alpha)</h4>\\n        <div class=\\\"help-text\\\">\\n            <b>Tips:</b> click and drag to pan; use ctrl-scroll or double click to zoom.\\n        </div><br>\\n        <button class=\\\"reset-btn\\\">Reset</button>\\n        <!--<button id=\\\"shift-btn\\\">Shift</button>\\n\\n        <div class=\\\"dropdown\\\">\\n            <button class=\\\"opts-btn dd-btn\\\">Options <i class=\\\"caret-down\\\"></i></button>\\n            <div class=\\\"dd-content\\\">\\n                <div>\\n                    <label>\\n                        <input type=\\\"checkbox\\\" name=\\\"fileNames\\\" value=\\\"fileNames\\\" />\\n                        Show File Names\\n                    </label>\\n                </div>\\n                <div>Hide track controls</div>\\n            </div>\\n        </div>\\n        -->\\n\\n        <div class=\\\"cursor-info pull-right\\\">\\n            <span class=\\\"nt-pos\\\">-</span><br>\\n            LCB Length: <span class=\\\"lcb-length\\\">-</span>\\n        </div>\\n\\n\\n        <br>\\n    </div>\\n    <br>\\n    <div class=\\\"mv-chart\\\">\\n        <svg></svg>\\n\\n        <div style=\\\"position: relative;\\\">\\n            <div class=\\\"mv-context-menu\\\" style=\\\"display: none;\\\">\\n                <ul>\\n                    <li id=\\\"nucleotide-align\\\">Align by nucleotide</li>\\n                    <li>Another item</li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","\n\n\nexport const marginTop = 20;     // margin of canvas top\nexport const trackOffset = 105; // distance between axises\nexport const hideTrackOffset = 35;\nexport const yPosOffset = 30;   // distance of regions from x-axis\nexport const lcbHeight = 22;    // height of regions (rectangles)\nexport const ctrlPadding = 6;\n\n","import {schemeCategory20} from './colors';\nimport {marginTop, trackOffset, yPosOffset, lcbHeight} from './consts';\n\nexport class Track {\n\n    constructor(params) {\n        this.d3 = params.d3;\n        this.svg = params.svg;\n\n        this.hidden = params.hidden;\n        this.id = params.id;\n        this.name = params.name;\n        this.label = params.label;\n        this.width = params.width;\n        this.xLength = params.xLength;\n        this.regions = params.regions;\n        this.yPos = params.yPos || marginTop + (this.id - 1) * trackOffset;\n\n\n        // render and expose axis/scale\n        this.x;\n        this.xAxis;\n        this.gX;\n        this.track;\n        this.render();\n\n        return this;\n    }\n\n    render() {\n        if (this.hidden) {\n            this.hiddenTrack();\n            return;\n        }\n\n        let d3 = this.d3;\n\n        this.x = d3.scaleLinear()\n            .domain([0, this.xLength])\n            .range([1, this.width + 1]);\n\n        this.xAxis = d3.axisBottom(this.x)\n            .ticks(5)\n            .tickSize(10)\n            .tickFormat(d3.format(\"d\"));\n\n        let g = this.track = this.svg.append('g')\n            .attr('class', d => `track id-${this.id}`)\n\n        this.gX = g.append(\"g\")\n            .attr('class', `axis axis-x-${this.id}`)\n            .call(this.xAxis)\n            .attr('transform', `translate(0, ${this.yPos})`);\n\n        // add names\n        g.append('text')\n            .attr('x', 0)\n            .attr('y', this.yPos + trackOffset - 5) // -2 padding\n            .text(this.label || this.name)\n            .attr('font-family', \"sans-serif\")\n            .attr('font-size', \"10px\")\n            .attr('fill', '#888');\n\n        if (this.regions)\n            this.addRegions(this.regions);\n    }\n\n    addRegions(regions) {\n        let numOfLCBs = regions.length;\n\n        // add regions\n        this.track.selectAll('rect')\n            .data(regions)\n            .enter()\n            .append('rect')\n            .attr('class', d => `region track-id-${this.id} group-${d.groupID} id-${d.id}`)\n            .attr('x', d => this.x(d.start))\n            .attr('y', d => this._getRegionYPos(this.id, d.strand))\n            .attr('width', d => this.x(d.end - d.start))\n            .attr('height', lcbHeight)\n            .attr('stroke', '#fffff')\n            .attr('fill', d =>  schemeCategory20[(d.groupID % numOfLCBs) % 20] )\n\n        this.regions = regions;\n    }\n\n    hiddenTrack() {\n        let g = this.track\n            .append('g')\n            .attr('class', d => `hidden-track`)\n\n        g.append('rect')\n            .attr('class', d => `hidden-track track-${this.id}`)\n            .attr('x', 0)\n            .attr('y', d => (this.id-1) * trackOffset )\n            .attr('width', d => 10000)\n            .attr('height', 20)\n            .attr('stroke', '#fffff')\n            .attr('fill', d =>  '#aaa')\n\n        g.append('text')\n            .attr('x', 10)\n            .attr('y', this.yPos - 2) // -2 padding\n            .text(this.label || this.name)\n            .attr(\"font-family\", \"sans-serif\")\n            .attr(\"font-size\", \"10px\")\n            .attr(\"fill\", '#222');\n    }\n\n    rescaleAxis() {\n        console.log('called zoom')\n        if (this.hidden) return;\n\n        let srcEvent = this.d3.event.sourceEvent;\n        let newScale = this.d3.event.transform.rescaleX(this.x);\n\n        this.gX.call(this.xAxis.scale(newScale));\n\n        // scale this track's rectangles\n        if (!srcEvent || srcEvent.type === 'wheel' || srcEvent.type === 'click') {\n            this._scaleRegions(newScale)\n        } else if ((this.d3.event.sourceEvent.type === 'mousemove')) {\n            this._panRegions(newScale)\n        }\n\n        this.zoomScale = newScale.copy();\n    }\n\n    _scaleRegions(newScale) {\n        this.track.selectAll('.region')\n            .attr('x', (d) => newScale(d.start))\n            .attr(\"width\", (d) => newScale(d.end) - newScale(d.start))\n\n\n    }\n\n    _panRegions(newScale) {\n        this.track.selectAll('.region')\n            .attr(\"x\", (d) => newScale(d.start) );\n    }\n\n\n    _getRegionYPos(trackIdx, strandDirection) {\n        return this.yPos + (strandDirection === '-' ? yPosOffset + lcbHeight : yPosOffset);\n    }\n\n    // shifts track by xPos,\n    // takes new shift position and call back\n    // call back returns new scale\n    shift(newX, scaleToUse, cb) {\n        let d3 = this.d3;\n\n        let scale = this.getScale();\n        let xPos = scaleToUse.invert(newX)\n\n        this.gX.transition().tween(\"axis\", (d) => {\n            let i = d3.interpolate(\n                [scale.domain()[0], scale.domain()[1]],\n                [scale.domain()[0] - xPos, scale.domain()[1] - xPos]\n            );\n            return (t) => {\n                this.x.domain(i(t));\n                this.gX.call(this.xAxis);\n                cb()\n            }\n        })\n    }\n\n    reset() {\n        this.x = this.d3.scaleLinear()\n            .domain([0, this.xLength])\n            .range([1, this.width + 1]);\n\n        this.gX.call(this.xAxis);\n    }\n\n    getScale() {\n        if (this.zoomScale) {\n            return this.zoomScale\n        } else {\n            return this.x\n        }\n    }\n\n    getZoomScale() {\n        if (this.zoomScale) {\n            return this.zoomScale\n        } else {\n            return this.x\n        }\n    }\n\n\n    random(min, max){\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n}\n\n\n","\nimport {marginTop, trackOffset, ctrlPadding} from './consts';\n\n\nconst btnStyle = 'width: 26px; height: 23px;';\n\nexport class TrackCtrl {\n\n    constructor(params) {\n        this.id = params.id;\n\n        this.container = params.container;\n        this.svg = params.svg;\n        this.trackCount = params.trackCount;\n        this.yPos = params.yPos || marginTop + (this.id - 1) * trackOffset;\n\n        this.ctrls;\n        this.isReference = params.isReference || false;\n        this.hidden;\n\n\n        // control callbacks\n        this.onMoveUp = params.onMoveUp;\n        this.onMoveDown = params.onMoveDown;\n        this.onSetReference = params.onSetReference;\n        this.onHide = params.onHide;\n        this.onShow = params.onShow;\n\n        this.init();\n        return this;\n    }\n\n    init() {\n        this.destroy(); // don't allow more than one controller\n        this.render();\n    }\n\n    render() {\n        let mvPos = this.container.querySelector('.mauve-viewer').getBoundingClientRect(),\n            svgPos = this.svg.getBoundingClientRect(),\n            relativeTop = svgPos.top - mvPos.top;\n\n        // add container\n        let ele = this.node = document.createElement('div');\n        ele.setAttribute('class', `track-ctrl ctrl-${this.id}`);\n        //ele.style.border = \"1px solid black\";\n        ele.style.top = relativeTop  + this.yPos + ctrlPadding + 'px';\n        ele.style.left = '-35px';\n        ele.style.width = '25px';\n        ele.style.height = trackOffset + 'px';\n        ele.style.position = 'absolute';\n\n        this._addMainButtons();\n\n        this.container.querySelector('.mauve-viewer').appendChild(ele)\n    }\n\n    _addMainButtons() {\n        let {upBtn, downBtn, hideBtn, refBtn} = this.ctrls = this._getButtons();\n        this.node.appendChild(upBtn);\n        //this.node.appendChild(hideBtn);\n        this.node.appendChild(refBtn);\n        this.node.appendChild(downBtn);\n\n        if (this.isReference)\n            refBtn.classList.add('active');\n    }\n\n    _getButtons() {\n        let upBtn = document.createElement('button');\n        upBtn.title = 'Move this genome up';\n        upBtn.style = btnStyle;\n        upBtn.innerHTML = '▲';\n        upBtn.disabled = this.id === 1 || false;\n        upBtn.onclick = this.moveTrackUp.bind(this)\n\n        let hideBtn = document.createElement('button');\n        hideBtn.title = 'Hide this genome'\n        hideBtn.style = btnStyle;\n        hideBtn.innerHTML = '−';\n        hideBtn.onclick = this.hideTrack.bind(this);\n\n        let refBtn = document.createElement('button');\n        refBtn.title = 'Set reference genome';\n        refBtn.classList.add('ref-btn');\n        refBtn.style = btnStyle;\n        refBtn.innerHTML = 'R';\n        refBtn.onclick = this.refTrack.bind(this);\n\n        let downBtn = document.createElement('button');\n        downBtn.title = 'Move this genome down';\n        downBtn.style = btnStyle;\n        downBtn.innerHTML = '▼';\n        downBtn.disabled = this.id === this.trackCount || false;\n        downBtn.onclick = this.moveTrackDown.bind(this);\n\n        return {upBtn, downBtn, hideBtn, refBtn}\n    }\n\n    _getShowButton() {\n        let showBtn = document.createElement('button');\n        showBtn.title = 'Show this genome';\n        showBtn.classList.add('show-btn');\n        showBtn.style = btnStyle;\n        showBtn.innerHTML = '+';\n        showBtn.onclick = this.showTrack.bind(this);\n        return showBtn;\n    }\n\n\n    moveTrackUp() {\n        this._selectNewRef(this.id, this.id - 1);\n        this.onMoveUp(this.id);\n    }\n\n    moveTrackDown() {\n        this._selectNewRef(this.id, this.id + 1);\n        this.onMoveDown(this.id);\n    }\n\n    hideTrack() {\n        this.node.innerHTML = '';\n        let showBtn = this._getShowButton();\n        this.node.appendChild(showBtn);\n\n        this.hidden = true;\n        this.onHide(this.id);\n    }\n\n    showTrack() {\n        console.log('called show');\n        this.node.innerHTML = '';\n        this._addMainButtons();\n\n        this.hidden = false;\n        this.onShow(this.id);\n    }\n\n    refTrack() {\n        let eles = this.container.querySelectorAll('.ref-btn');\n        eles.forEach(ele => { ele.classList.remove(\"active\"); });\n        this.ctrls.refBtn.classList.add('active');\n\n        this.onSetReference(this.id);\n        this.isReference = true;\n    }\n\n\n    _selectNewRef(oldID, newID) {\n        let oldCtrl = this.container.querySelector(`.ctrl-${oldID} .ref-btn`),\n            newCtrl = this.container.querySelector(`.ctrl-${newID} .ref-btn`);\n\n        let newCtrlWasActive;\n        if (newCtrl.classList.contains('active')) {\n            newCtrl.classList.remove('active');\n            oldCtrl.classList.add('active');\n            newCtrlWasActive = true;\n        }\n\n        if (oldCtrl.classList.contains('active') && !newCtrlWasActive) {\n            oldCtrl.classList.remove('active');\n            newCtrl.classList.add('active');\n        }\n    }\n\n\n    destroy() {\n        let node = this.container.querySelector(`.ctrl-${this.id}`);\n        if (node) node.remove();\n    }\n}\n","// Todo: listen for mousemove on track container\nimport {marginTop, yPosOffset, lcbHeight, trackOffset} from './consts';\n\n\nconst debug = false;\n\nexport class Cursor {\n\n    constructor(params) {\n        this.container = params.container;\n        this.d3 = params.d3;\n        this.svg = params.svg;\n        this.trackCount = params.trackCount;\n        this.onclick = params.onclick;\n\n\n        // cursor class uses tracks for scales\n        this.tracks = params.tracks;\n        this.zoom = params.zoom;\n\n        // set on hover\n        this.hoverXPos;   // position of mouse cursor\n        this.hoverTrackID;\n        this.hoverLCBID;\n        this.scales = []\n        this.relativeXs = []\n\n        this.hoverLines = [];\n\n        this.render();\n\n        return this;\n    }\n\n    render() {\n        // draw the track cursor once and update\n        // position for better performance\n        let self = this;\n\n        let d3 = this.d3\n\n        for (let i=1; i <= this.trackCount; i++) {\n            let yPos = this._getRegionYPos(i, '-');\n\n            let line = this.svg.append('line')\n                .attr('class', 'cursor-line')\n                .style('stroke', '#222' )\n                .attr('y1', marginTop + yPos - 30)\n                .attr('y2', marginTop + yPos + 30)\n\n            this.hoverLines.push(line);\n        }\n\n        this.resetHover(this.scale);\n\n\n        // click event callback\n        this.svg.on('click', (event) => {\n            this.onclick({\n                event: event,\n                trackID: this.hoverTrackID,\n                lcbID: this.hoverLCBID,\n                xPos: this.hoverXPos,\n                relativeXs: this.relativeXs,\n                scales: this.scales\n            })\n        })\n    }\n\n    resetHover() {\n        console.log('reset hover')\n        let svg = this.svg,\n            d3 = this.d3,\n            lines = this.hoverLines;\n\n        svg.selectAll('.track')\n            .on(\"mouseover\", null)\n            .on(\"mousemove\", null)\n            .on(\"mouseout\", null);\n\n        let lengthNode = this.container.querySelector('.lcb-length'),\n            ntPosNode = this.container.querySelector('.nt-pos');\n\n        let self = this;\n        svg.selectAll('.track')\n            .on(\"mouseover\", () => {\n                d3.selectAll('.cursor-line')\n                    .attr(\"opacity\", 1.0)\n            })\n            .on(\"mousemove\", function() {\n                let clientX = d3.event.clientX,\n                    clientY = d3.event.clientY;\n                let ele = document.elementFromPoint(clientX, clientY);\n                let d = d3.select(ele).data()[0];\n\n                if (!ele) return;\n\n                // ignore non-regions\n                if (ele.tagName !== 'rect' || !d || !('lcb_idx' in d)) {\n                    if (ele.classList.contains('cursor-line')) {\n                        return;\n                    }\n\n                    // if not region, hide cursors\n                    for (let i=0; i < lines.length; i++) {\n                        lines[i].attr(\"opacity\", 0);\n                    }\n                    return;\n                }\n\n                let xPos = d3.mouse(this)[0];\n                let trackID = self.hoverTrackID = d.lcb_idx;\n                let hoverStrand = d.strand;\n\n                let x = self.tracks[trackID -1].getScale();\n                //console.log('Scale for hovered track', trackID , 'is', x.domain())\n\n                // base xPos on nearest integer in range\n                xPos = x(Math.round(x.invert(xPos)));\n\n                // store position property of mouse cursor\n                self.hoverXPos = xPos;\n                self.relativeXs[trackID - 1] = 0;\n                self.scales[trackID - 1] = x;\n\n                // position relative to lcb\n                let relXPos = xPos - x(d.start);\n\n                // draw cursor line for rect being hovered\n                lines[trackID - 1]\n                    .attr('class', 'cursor-line')\n                    .attr('x1', xPos)\n                    .attr('x2', xPos);\n\n                // draw cursor line for other rects\n                let groupID = self.hoverLCBID = d.groupID;\n                svg.selectAll(`.group-${groupID}`).each(function(d, i) {\n                    //console.log('d', this)\n                    // need to skip rect that is being hovered on\n                    if (d.lcb_idx === trackID) return;\n\n                    // need to compute relative position based on strand\n                    // store the relative position on other tracks as well\n                    let x = self.tracks[i].getScale();\n                    //console.log('Scale for relative lcb', i+1, 'is', x.domain())\n\n                    let nextXPos;\n                    if (hoverStrand !== d.strand) {\n                        nextXPos = x(d.end) - relXPos;\n                    } else {\n                        nextXPos = x(d.start) + relXPos;\n                    }\n\n                    let diff = xPos - nextXPos ;\n                    self.relativeXs[d.lcb_idx - 1] = diff;\n                    self.scales[d.lcb_idx - 1] = x;\n                    //console.log('diff for track', i+1, diff);\n\n                    lines[d.lcb_idx-1]\n                        .attr('x1', nextXPos )\n                        .attr('x2', nextXPos )\n                })\n\n                // highlight lcbs\n                svg.selectAll(`.group-${groupID}`).each(function(d) {\n                    this.parentNode.appendChild(this);\n                    d3.select(this)\n                        .attr('stroke', '#222')\n                        .attr('stroke-width', 2)\n                })\n\n                // highlight backbone\n                svg.selectAll(`.lcb-line.id-${groupID}`)\n                    .attr('stroke-width', 3)\n\n                // set cursor-info\n                lengthNode.innerHTML = d.end - d.start + 1;\n                ntPosNode.innerHTML = Math.round(x.invert(xPos));\n\n\n                if (debug) {\n                    self.relativeXs.forEach((xp,i) => {\n                        if (i > 4) return\n                        console.log(i, xp)\n                    })\n                }\n            })\n            .on(\"mouseout\", function(d) {\n                // ignore hover on line\n                if (d3.event.relatedTarget &&\n                    d3.event.relatedTarget.classList.contains('cursor-line')) {\n                    return;\n                }\n\n                d3.selectAll('.cursor-line')\n                    .attr(\"opacity\", 0)\n                    .attr('x1', -2)\n                    .attr('x2', -2)\n\n                // remove highlighting\n                svg.selectAll(`.region`)\n                    .attr('stroke', null)\n                svg.selectAll(`.lcb-line`)\n                    .attr('stroke-width', 1)\n\n                lengthNode.innerHTML = '-';\n                ntPosNode.innerHTML = '-';\n            });\n    }\n\n\n\n    _getRegionYPos(trackID, strandDirection) {\n        return (strandDirection === '-' ? yPosOffset + lcbHeight : yPosOffset) + ((trackID-1) * trackOffset);\n    }\n}\n","\nimport {schemeCategory20} from './colors';\nimport {marginTop, trackOffset, yPosOffset, lcbHeight} from './consts';\n\nexport class BackBone {\n\n    constructor(params) {\n        this.d3 = params.d3;\n        this.svg = params.svg;\n\n        this.data = params.data;\n        //this.x = params.scale\n        this.tracks = params.tracks;\n\n        this.render(this.data);\n\n        return this;\n    }\n\n    render(data) {\n        // local (not const)\n        let x = this.x,\n            tracks = this.tracks;\n\n        // compute all LCB midpoints as list of objects through backbone\n        let midSets = [];\n        data.forEach((lcbs) => {\n            let lcbMids = [];\n            lcbs.forEach(l => {\n                if (l.hidden) return;\n\n                let x = tracks[l.lcb_idx - 1].getZoomScale();\n\n                lcbMids.push({\n                    lcb_idx: l.lcb_idx,\n                    start: l.start,\n                    end: l.end,\n                    x:  x(l.start) + ( (x(l.end) - x(l.start))  / 2 ) ,\n                    y: marginTop + this._getRegionYPos(l.lcb_idx, l.strand) + (lcbHeight/2)\n                });\n            })\n\n            midSets.push(lcbMids);\n        })\n\n        // draw connections using lineFunction\n        // keep line function for scaling\n        this.lineFunction = this.d3.line()\n            .x(d => d.x)\n            .y(d => d.y)\n\n        midSets.forEach((set, i) => {\n            this.svg.datum(set)\n                .insert(\"path\",\":first-child\")\n                .attr('class', `lcb-line id-${i}`)\n                .attr(\"d\", this.lineFunction(set))\n                .attr(\"stroke-width\", 1)\n                .attr('stroke', schemeCategory20[i % 20])\n                .attr('fill', 'none')\n\n        })\n\n        return midSets;\n    }\n\n    scale(newScale) {\n        this.svg.selectAll('path.lcb-line')\n            .attr(\"d\", d => {\n                let set = d.map(p => {\n                    let newScale = this.tracks[p.lcb_idx - 1].getZoomScale();\n                    return {\n                        start: p.start,\n                        end: p.end,\n                        x: newScale(p.start) + ( (newScale(p.end) - newScale(p.start))  / 2 ),\n                        y: p.y\n                    }\n                })\n\n                return this.lineFunction(set)\n            });\n    }\n\n    getLineFunction() {\n        return this.lineFunction;\n    }\n\n    _getRegionYPos(trackIdx, strandDirection) {\n        return (strandDirection === '-' ? yPosOffset + lcbHeight : yPosOffset) + ((trackIdx-1) * trackOffset);\n    }\n\n    /*\n    renderTest() {\n        let d3 = this.d3,\n            svg = this.svg,\n            x = this.x;\n\n        let graph = {nodes: [], links: []};\n\n        let node =[]\n\n        let self = this;\n        this.data.forEach((group,i) => {\n            svg.selectAll(`.group-${i}`).each(function(l) {\n                graph.nodes.push({\n                    id: l.id,\n                    start: l.start,\n                    end: l.end,\n                    x:  x(l.start) + ( (x(l.end) - x(l.start))  / 2 )  ,\n                    y: marginTop + self._getRegionYPos(l.lcb_idx, l.strand) + (lcbHeight/2)\n                });\n\n                node.push(this)\n            })\n        })\n        node = d3.select(node);\n\n        this.data.forEach(group => {\n\n            group.forEach((lcb, i)=> {\n                // ignore empty regions\n                if (lcb.end == 0) return;\n\n                if (i == 0) return;\n                graph.links.push({source: group[i-1].id, target: lcb.id});\n            })\n        })\n\n\n        let simulation = d3.forceSimulation()\n            .force(\"link\", d3.forceLink().id(function(d) { return d.id; }))\n            //.force(\"charge\", d3.forceManyBody().strength(-1000))\n\n        let color = d3.scaleOrdinal(schemeCategory20);\n\n        let link = svg.append(\"g\")\n            .attr(\"class\", \"links\")\n            .selectAll(\"line\")\n            .data(graph.links)\n            .enter().append(\"line\")\n            .attr('stroke', '#999')\n            .attr(\"stroke-width\", function(d) { return 3; });\n\n\n        let ticked = () => {\n            link.attr(\"x1\", function(d) {\n                    console.log('x1', d.source.x)\n                    return d.source.x;\n                    })\n                .attr(\"y1\", function(d) { return d.source.y; })\n                .attr(\"x2\", function(d) { return d.target.x; })\n                .attr(\"y2\", function(d) { return d.target.y; });\n\n        }\n\n        simulation\n            .nodes(graph.nodes)\n            .on(\"tick\", ticked);\n\n        simulation.force(\"link\")\n            .links(graph.links);\n    }*/\n\n}\n","/**\n * mauve-viewer.js\n *\n * A JS/d3.js Mauve Viewer\n *\n * Author(s): nconrad\n *\n */\n\nimport {Track} from './track';\nimport {TrackCtrl} from './track-ctrl';\nimport {Cursor} from './cursor';\nimport {BackBone} from './backbone';\nimport template from './container.html';\nimport {\n    marginTop,\n    trackOffset,\n    hideTrackOffset,\n} from './consts';\n\n\n\nexport default class MauveViewer {\n    constructor({d3, ele, data, labels}){\n        this.ele = ele;\n        this.data = data;\n        this.d3 = d3;\n        this.labels = labels;\n\n        this.tracks = []\n        this.trackCount;\n        this.hiddenTracks = [];\n        this.backbone;\n        this.cursor;\n\n        this.init();\n    }\n\n    init() {\n        let {regions} = this.getGenomeRegions(this.data);\n        this.genomeRegions = regions;\n        this.trackCount = Object.keys(this.genomeRegions).length;\n\n        this.setReference(1, true);  // set first genome as reference\n\n        //Todo: testing, remove!\n        //this.data.forEach(lcb => {\n        //    lcb.forEach(region => {\n        //        region.strand = '+';\n        //    })\n        //})\n\n        this.ele.innerHTML = template;\n        this.render();\n        this.rendered = true;\n\n        this.initControls(); // add global controls\n    }\n\n    render() {\n        const d3 = this.d3,\n            data = this.data;\n\n        const genomeRegions = this.genomeRegions;\n        const trackCount = this.trackCount;\n\n        // get highest end value\n        const endMax = Math.max(...[].concat.apply([], data).map(region => region.end));\n        const xLength = endMax + 100;\n\n        // create svg dom element\n        d3.select(this.ele.querySelector('svg')).remove();\n        const svg = this.svg =  d3.select(this.ele.querySelector('.mv-chart')).append(\"svg\")\n            .attr('width', 1000)\n            .attr('height', trackCount * 165)\n\n        const width = +svg.attr(\"width\"),\n            height = +svg.attr(\"height\");\n\n        var rect = this.rect = svg.append(\"rect\")\n            .attr('class', 'zoom-box')\n            .attr(\"width\",  1000)\n            .attr(\"height\", trackCount * 165)\n            .style(\"fill\", 'none')\n            .style(\"pointer-events\", \"all\");\n\n        /**\n         *  ctrl-mousewheel for zoom\n         */\n        let zoom = this.zoom = d3.zoom()\n            .scaleExtent([1, xLength/10])\n            .translateExtent([[-width, 0], [width *2, 0]])\n            .on(\"zoom\", zoomed)\n            .filter(() => (\n                d3.event.ctrlKey ||\n                d3.event.type === 'mousedown' ||\n                d3.event.type == 'dblclick'\n            ))\n\n        svg.call(zoom)\n        svg.on(\"dblclick.zoom\", null);\n\n\n        /**\n         *  create tracks (axises, scales, gXs)\n         */\n        let axises = [],\n            gXs = [],\n            xScales = [];\n        let tracks = this.tracks;\n\n        let yPos = marginTop;\n        for (let id = 1; id <= trackCount; id++) {\n            let isHidden = this.hiddenTracks.includes(id);\n            yPos += id === 1 ? 0 : (isHidden ? hideTrackOffset : trackOffset);\n\n            let name = genomeRegions[id][0].name,\n                label = this.labels ? this.labels[name] : '';\n\n            let track = new Track({\n                d3, yPos, svg, id, name, label,\n                container: this.ele,\n                width, xLength,\n                hidden: isHidden,\n                regions: genomeRegions[id]\n            })\n\n            axises.push(track.xAxis);\n            gXs.push(track.gX);\n            xScales.push(track.x);\n\n            tracks.push(track);\n\n            // only create track ctrls once\n            if (this.rendered) continue;\n\n            new TrackCtrl({\n                id, yPos, height, container: this.ele,\n                svg: this.ele.querySelector('svg'),\n                trackCount: this.trackCount,\n                isReference: id === 1,\n                onMoveUp: id => { this.moveTrackUp(id) },\n                onMoveDown: id => { this.moveTrackDown(id) },\n                onSetReference: id => { this.setReference(id) },\n                onHide: id => { this.hideTrack(id) },\n                onShow: id => { this.showTrack(id) }\n            })\n        }\n\n        /*\n        let masterTrack = this.masterTrack =  new MasterTrack({\n            d3, svg,\n            yPos: yPos += trackOffset,\n            id: trackCount+1,\n            name: 'master',\n            label: 'master',\n            container: this.ele,\n            width, xLength\n        })\n        tracks.push(masterTrack)\n        */\n\n\n        // add hover cursor lines, initially without x position\n        this.cursor = new Cursor({\n            d3, trackCount, svg,\n            container: this.ele,\n            tracks: this.tracks,\n            onclick: (posDict) => {\n                //this.onCursorClick(posDict);\n            },\n        })\n\n        // add backbone of lcb lines\n        let backbone = this.backbone = new BackBone({\n            tracks, data, d3, svg\n        })\n\n        function zoomed() {\n            // scale each track\n            let newScale;\n            for (let i = 0; i < tracks.length; i++) {\n                newScale = tracks[i].rescaleAxis();\n            }\n\n            // scale lines\n            backbone.scale();\n        }\n\n        let reset = () => {\n            this.tracks.forEach(track => { track.reset() });\n            zoom.transform(rect, d3.zoomIdentity);\n        }\n\n        d3.select(this.ele.querySelector('.reset-btn'))\n            .on(\"click\", reset);\n\n    }\n\n    moveTrackUp(id) {\n        let swapID = id - 1;\n        if (swapID < 1) return;\n\n        this.swapTrack(id, swapID);\n        this.swapBackbones(id, swapID)\n        this.render();\n    }\n\n    moveTrackDown(id) {\n        let swapID = id + 1;\n        if (swapID > this.trackCount) return;\n\n        this.swapTrack(id, swapID);\n        this.swapBackbones(id, swapID)\n        this.render();\n    }\n\n    swapTrack(id, newID) {\n        let swapTrack = this.genomeRegions[newID];\n        this.genomeRegions[newID] = this.genomeRegions[id];\n        this.genomeRegions[id] = swapTrack;\n    }\n\n    swapBackbones(oldID, newID) {\n        this.data.forEach(lcb => {\n            let foundOldRegion = null,\n                foundSwapRegion = null;\n            lcb.forEach(region => {\n                if (region.lcb_idx === oldID)\n                    region.lcb_idx = newID;\n                else if (region.lcb_idx === newID)\n                    region.lcb_idx = oldID;\n            })\n\n            lcb.sort((a, b) => a.lcb_idx - b.lcb_idx)\n        })\n    }\n\n    setReference(id, noRerender) {\n        this.data.forEach(lcb => {\n            let flipped = false;\n\n            // first determine if reference's (region)\n            // strand direction is made positive\n            lcb.forEach(region => {\n                if (region.lcb_idx !== id) return;\n\n                if (region.strand !== '+') {\n                    region.strand = '+';\n                    flipped = true\n                }\n            })\n\n            if (!flipped) return;\n\n            // otherwise, need to flip corresponding regions\n            lcb.forEach(region => {\n                if (region.lcb_idx === id) return;\n                region.strand = region.strand === '-' ? '+' : '-';\n            })\n        })\n\n        if (noRerender) return;\n\n        this.render();\n    }\n\n    hideTrack(id) {\n        this.data.forEach(lcbs => {\n            lcbs.forEach(region => {\n                if (region.lcb_idx == id)\n                    region.hidden = true;\n            })\n        })\n\n        this.hiddenTracks.push(id);\n        this.render();\n    }\n\n    showTrack(id) {\n        this.data.forEach(lcbs => {\n            lcbs.forEach(region => {\n                if (region.lcb_idx == id)\n                    delete region.hidden;\n            })\n        })\n\n        this.hiddenTracks.splice( this.hiddenTracks.indexOf(id));\n        this.render();\n    }\n\n    onCursorClick({trackID, relativeXs, lcbID, xPos, scales }) {\n        if (!trackID) return;\n\n        // reset hack\n        this.tracks.forEach((track) => {\n            track.reset()\n        })\n        //this.zoom.transform(this.rect, this.d3.zoomIdentity);\n\n        // shift all tracks to relative position\n        this.tracks.forEach((track, i) => {\n            // skip track clicked on\n            if (track.id == trackID || track.id > this.trackCount) return;\n            let shiftX = relativeXs[i];\n\n            // there may not be a corresponding LCB\n            if (!shiftX) return\n\n            let complete = 0\n            let scaleToUse = this.tracks[trackID-1].getScale()\n\n            track.shift(shiftX, scaleToUse, () => {\n                complete += 1;\n                // wait for all shifts to finish\n                if (complete == this.trackCount) {\n                    console.log('call trasnform')\n                    this.rect.transition().call(\n                        this.zoom.transform, this.d3.zoomTransform(track.track.select('.region'))\n                    )\n                }\n            });\n        })\n\n    }\n\n    // gets lcbs that have entry for every organism\n    // deprecated(?)\n    getSharedLCBs(data) {\n        let maxRows = Math.max( ...data.map(lcb => lcb.length) );\n        let filtered = data.filter(lcbs => lcbs.length === maxRows);\n        return filtered;\n    }\n\n    // gets regions for each organism (index); adding ids\n    // also returns connections of regions\n    getGenomeRegions(lcbs) {\n        let regions = {};\n        let regionID = 0;\n        let lcbID = 0;\n        lcbs.forEach((lcb, groupID) => {\n            //lcb.reverse(); // consider last index reference genome\n            lcbID += 1;\n            lcb.forEach((region) => {\n                // increment/add ids to regions\n                regionID += 1;\n                region.id = regionID;\n                region.groupID = groupID;\n\n                let index = region.lcb_idx;\n                if (index in regions)\n                    regions[index].push(region);\n                else\n                    regions[index] = [region];\n            })\n        })\n\n        return {regions, regionCount: regionID, lcbCount: lcbID};\n    }\n\n    initControls() {\n        this.ele.querySelector('.opts-btn').onclick = () => {\n            this.ele.querySelector(\".dd-content\").classList.toggle(\"show\");\n        }\n\n        document.onclick = (evt) => {\n            let dd = this.ele.querySelector('.dropdown');\n            if (dd.contains(evt.target)) return;\n\n            if (!evt.target.matches('.dd-btn')) {\n                var dds = this.ele.getElementsByClassName(\"dd-content\");\n                Array.from(dds).forEach(dd => { dd.classList.remove('show') });\n            }\n        }\n    }\n\n}\n"],"sourceRoot":""}
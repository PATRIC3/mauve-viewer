{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/colors.js","webpack:///./src/mauve-viewer.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","schemeCategory20","MauveViewer","params","_classCallCheck","this","ele","data","d3","init","innerHTML","render","console","log","genomeRegions","getGenomeRegions","trackCount","keys","length","numOfLCBs","xLength","Math","max","apply","_toConsumableArray","concat","map","region","end","querySelector","select","remove","x","svg","append","attr","width","height","zoom","scaleExtent","translateExtent","on","newScale","event","transform","rescaleX","xScales","axises","gX","gXs","xAxis","scale","srcEvent","sourceEvent","type","selectAll","start","set","y","lineFunction","resetHover","trackOffset","scaleLinear","domain","range","axisBottom","ticks","tickSize","text","push","yPos","h","_loop","trackIdx","regions","enter","id","groupID","getRegionYPos","strand","_colors__WEBPACK_IMPORTED_MODULE_0__","hoverLines","line","style","midSets","forEach","lcb","lcbMids","lcb_idx","lines","xPos","mouse","hoverStrand","relXPos","each","nextXPos","strandDirection","datum","insert","zoomIdentity","preventDefault","showContextMenu","index","maxRows","filter","lcbs","regionID"],"mappings":"CAAA,SAAAA,EAAAC,GACA,oBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,SACA,sBAAAG,eAAAC,IACAD,UAAAH,OACA,CACA,IAAAK,EAAAL,IACA,QAAAM,KAAAD,GAAA,iBAAAJ,gBAAAF,GAAAO,GAAAD,EAAAC,IAPA,CASCC,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAT,QAGA,IAAAC,EAAAM,EAAAE,IACAJ,EAAAI,EACAC,GAAA,EACAV,YAUA,OANAW,EAAAF,GAAAG,KAAAX,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAS,GAAA,EAGAT,EAAAD,QA0DA,OArDAQ,EAAAK,EAAAF,EAGAH,EAAAM,EAAAP,EAGAC,EAAAO,EAAA,SAAAf,EAAAgB,EAAAC,GACAT,EAAAU,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CT,EAAAe,EAAA,SAAAvB,GACA,oBAAAwB,eAAAC,aACAN,OAAAC,eAAApB,EAAAwB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAApB,EAAA,cAAiD0B,OAAA,KAQjDlB,EAAAmB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAlB,EAAAkB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAvB,EAAAe,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAlB,EAAAO,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAtB,EAAA0B,EAAA,SAAAjC,GACA,IAAAgB,EAAAhB,KAAA4B,WACA,WAA2B,OAAA5B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAO,EAAAO,EAAAE,EAAA,IAAAA,GACAA,GAIAT,EAAAU,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD5B,EAAA+B,EAAA,SAIA/B,IAAAgC,EAAA,mBC1DAvC,EAAOD,SACHyC,kBAvBA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,imBCViBC,aACjB,SAAAA,EAAYC,gGAAOC,CAAAC,KAAAH,GACfG,KAAKC,IAAMH,EAAOG,IAClBD,KAAKE,KAAOJ,EAAOI,KACnBF,KAAKG,GAAKL,EAAOK,GAEjBH,KAAKI,6FAILJ,KAAKC,IAAII,UAAT,09BAwBAL,KAAKM,OAAON,KAAKG,GAAIH,KAAKE,qCAGvBC,EAAID,GACPK,QAAQC,IAAI,OAAQN,GAEpB,IAAMO,EAAgBT,KAAKU,iBAAiBR,GACtCS,EAAarC,OAAOsC,KAAKH,GAAeI,OAGxCC,EAAYL,EAAc,GAAGI,OAI/BE,EADWC,KAAKC,IAALC,MAAAF,KAAIG,KAAYC,OAAOF,SAAUhB,GAAMmB,IAAI,SAAAC,GAAM,OAAIA,EAAOC,QACpD,IAKvBhB,QAAQC,IAAIR,KAAKC,IAAIuB,cAAc,QACnCrB,EAAGsB,OAAOzB,KAAKC,IAAIuB,cAAc,QAAQE,SACzC,IAiBIC,EAjBEC,EAAMzB,EAAGsB,OAAOzB,KAAKC,IAAIuB,cAAc,cAAcK,OAAO,OAC7DC,KAAK,QAAS,KACdA,KAAK,SAAuB,IAAbnB,GAGdoB,GAASH,EAAIE,KAAK,SACpBE,GAAUJ,EAAIE,KAAK,UAGnBG,EAAO9B,EAAG8B,OACTC,aAAa,EAAG,MAChBC,mBAAmB,IAAM,IAAKJ,EAAQ,GAAIC,EAAS,OACnDI,GAAG,OAuKR,WAKI,IAHA,IAAIC,EAAWlC,EAAGmC,MAAMC,UAAUC,SAASC,EAAQ,IAG1CjF,EAAI,EAAGA,EAAIkF,EAAO7B,OAAQrD,IAAK,CACpC,IAAImF,EAAKC,EAAIpF,GACTqF,EAAQH,EAAOlF,GACfmE,EAAIc,EAAQjF,GAChBmF,EAAG5E,KAAK8E,EAAMC,MAAM3C,EAAGmC,MAAMC,UAAUC,SAASb,KAIpD,IAAIoB,EAAW5C,EAAGmC,MAAMU,YACnBD,GAA8B,UAAlBA,EAASE,MAAsC,UAAlBF,EAASE,KAIb,cAA9B9C,EAAGmC,MAAMU,YAAYC,MAC7B9C,EAAG+C,UAAU,WACRpB,KAAK,IAAK,SAAC5D,GAAD,OAAOmE,EAASnE,EAAEiF,SALjChD,EAAG+C,UAAU,WACRpB,KAAK,IAAK,SAAC5D,GAAD,OAAOmE,EAASnE,EAAEiF,SAC5BrB,KAAK,QAAS,SAAC5D,GAAD,OAAOmE,EAASnE,EAAEqD,KAAOc,EAASnE,EAAEiF,SAO3DhD,EAAG+C,UAAU,iBACRpB,KAAK,IAAK,SAAA5D,GACP,IAAIkF,EAAMlF,EAAEmD,IAAI,SAAA3B,GACZ,OACIyD,MAAOzD,EAAEyD,MACT5B,IAAK7B,EAAE6B,IACPI,EAAGU,EAAS3C,EAAEyD,QAAYd,EAAS3C,EAAE6B,KAAOc,EAAS3C,EAAEyD,QAAW,EAClEE,EAAG3D,EAAE2D,KAIb,OAAOC,EAAaF,KAI5BjD,EAAG+C,UAAU,WACRd,GAAG,YAAa,MAChBA,GAAG,YAAa,MAChBA,GAAG,aAAc,MACjBA,GAAG,aAAc,MACjBA,GAAG,WAAY,MACpBmB,EAAWlB,KAlNfT,EAAIQ,GAAG,gBAAiB,MAaxB,IATA,IAAIoB,EAAc,IAKdd,KACAE,KACAH,KAEKjF,EAAI,EAAGA,EAAImD,EAAYnD,IAAK,CACjCmE,EAAIxB,EAAGsD,cACFC,QAAQ,EAAG3C,IACX4C,OAAO,EAAG5B,EAAQ,IAEvB,IAAIc,EAAQ1C,EAAGyD,WAAWjC,GACrBkC,OAAO9B,EAAQ,IAAMC,EAAS,GAAK,IACnC8B,SAAS,IAEVnB,EAAKf,EAAIC,OAAO,KACfC,KAAK,QADD,eAAAV,OACyB5D,IAC7BO,KAAK8E,GACLf,KAAK,YAHD,gBAAAV,OAjBG,GAoBwC5D,GAAKgG,EAAc,GAH9D,MAMT5B,EAAIC,OAAO,QACNC,KAAK,IAAK,IACVA,KAAK,IAzBE,GAyBetE,EAAKgG,EAAe,GAC1CO,KAAKtD,EAAcjD,EAAE,GAAG,GAAGW,MAC3B2D,KAAK,cAAe,cACpBA,KAAK,YAAa,QAClBA,KAAK,OAAQ,WAElBY,EAAOsB,KAAKnB,GACZD,EAAIoB,KAAKrB,GACTF,EAAQuB,KAAKrC,GAQjB,IAJA,IAAIsC,EAAO,GACPC,EAAI,GA3EKC,EAAA,SA8EJC,GACL,IAAIC,EAAU5D,EAAc2D,GAEpBxC,EAAIH,OAAO,KACdI,OAAO,KACPC,KAAK,QAFF,eAAAV,OAE0BgD,IAGhClB,UAAU,QACPhD,KAAKmE,GACLC,QACAzC,OAAO,QACPC,KAAK,QAAS,SAAA5D,GAAC,6BAAAkD,OAA2BgD,EAA3B,YAAAhD,OAA8ClD,EAAEqG,GAAhD,WAAAnD,OAA4DlD,EAAEsG,WAC7E1C,KAAK,IAAK,SAAA5D,GAAC,OAAIyD,EAAEzD,EAAEiF,SACnBrB,KAAK,IAAK,SAAA5D,GAAC,OAAIuG,EAAcL,EAAUlG,EAAEwG,UACzC5C,KAAK,QAAS,SAAA5D,GAAC,OAAIyD,EAAEzD,EAAEqD,IAAMrD,EAAEiF,SAC/BrB,KAAK,SAAUoC,GACfpC,KAAK,SAAU,UACfA,KAAK,OAAQ,SAAA5D,GAAC,OAAKyG,EAAA,iBAAkBzG,EAAEsG,QAAU1D,EAAa,OAlB9DsD,EAAW,EAAGA,GAAYzD,EAAYyD,IAAYD,EAAlDC,GAuBT,IADA,IAAIQ,KACKpH,EAAE,EAAGA,GAAKmD,EAAYnD,IAAK,CAChC,IAAIyG,EAAOQ,EAAcjH,EAAG,KACxBqH,EAAOjD,EAAIC,OAAO,QACjBC,KAAK,QAAS,cACdgD,MAAM,SAAU,QAChBhD,KAAK,KAAMmC,EAAO,IAClBnC,KAAK,KAAMmC,EAAO,IAEvBW,EAAWZ,KAAKa,GAGpBtB,EAAW5B,GAGX,IAAIoD,KACJ7E,EAAK8E,QAAQ,SAACC,GAEV,IAAIC,KACJD,EAAID,QAAQ,SAAAnH,GACR,IAAIL,EAAIK,EAAEsH,QAAU,EACpBD,EAAQlB,MACJb,MAAOtF,EAAEsF,MACT5B,IAAK1D,EAAE0D,IACPI,EAAIA,EAAE9D,EAAEsF,QAAYxB,EAAE9D,EAAE0D,KAAOI,EAAE9D,EAAEsF,QAAW,EAC9CE,EAxFI,GAwFWoB,EAAcjH,EAAE,EAAGK,EAAE6G,QAAWR,EAAE,MAIzDa,EAAQf,KAAKkB,KAIjB,IAAI5B,EAAenD,EAAG0E,OACjBlD,EAAE,SAAAzD,GAAC,OAAIA,EAAEyD,IACT0B,EAAE,SAAAnF,GAAC,OAAIA,EAAEmF,IAgHd,SAASE,EAAWT,GAChB,IAAInB,EAAImB,EACJsC,EAAQR,EAEZhD,EAAIsB,UAAU,WAAWd,GAAG,YAAa,SAASlE,GAC9C,IAAIsG,EAAUtG,EAAEsG,QAEZa,EAAOlF,EAAGmF,MAAMtF,MAAM,GACtBoE,EAAWlG,EAAEiH,QACbI,EAAcrH,EAAEwG,OAGhBc,EAAUH,EAAO1D,EAAEzD,EAAEiF,OAGzBiC,EAAMhB,EAAS,GACVtC,KAAK,KAAMuD,GACXvD,KAAK,KAAMuD,GAGhBzD,EAAIsB,UAAJ,UAAA9B,OAAwBoD,IAAWiB,KAAK,SAAAvH,GAKpC,IAAIwH,EAHAxH,EAAEiH,UAAYf,IAKdsB,EADAH,IAAgBrH,EAAEwG,OACP/C,EAAEzD,EAAEqD,KAAOiE,EAEX7D,EAAEzD,EAAEiF,OAASqC,EAG5BJ,EAAMlH,EAAEiH,QAAQ,GACXrD,KAAK,KAAM4D,GACX5D,KAAK,KAAM4D,QAIxB9D,EAAIsB,UAAU,WACTd,GAAG,YAAa,SAASlE,GACtB,IAAK,IAAIV,EAAE,EAAGA,EAAI4H,EAAMvE,OAAQrD,IAC5B4H,EAAM5H,GAAGsE,KAAK,UAAW,KAGhCM,GAAG,WAAY,SAASlE,GACrB,IAAK,IAAIV,EAAE,EAAGA,EAAI4H,EAAMvE,OAAQrD,IAC5B4H,EAAM5H,GAAGsE,KAAK,UAAW,KA6CzC,SAAS2C,EAAcL,EAAUuB,GAC7B,OAA4B,MAApBA,EAA0B1B,EAAOC,EAAID,IAAUG,EAAS,GAAKZ,EA1MzEuB,EAAQC,QAAQ,SAAC5B,EAAK5F,GAClBoE,EAAIgE,MAAMxC,GACLyC,OAAO,OAAO,gBACd/D,KAAK,QAAS,YACdA,KAAK,IAAKwB,EAAaF,IACvBtB,KAAK,eAAgB,GACrBA,KAAK,SAAU6C,EAAA,iBAAiBnH,EAAI,KACpCsE,KAAK,OAAQ,UAItB3B,EAAGsB,OAAOzB,KAAKC,IAAIuB,cAAc,eAC5BY,GAAG,QAyLR,WACIH,EAAKM,UAAUX,EAAKzB,EAAG2F,gBAvL3BlE,EAAI7D,KAAKkE,GAmJTL,EAAIsB,UAAU,eAAed,GAAG,cAAe,WAC3CjC,EAAGmC,MAAMyD,iBAETC,gBAAgB5G,KAAKY,KAArBgG,KAKJpE,EAAIsB,UAAU,WAAWd,GAAG,cAAe,SAASlC,EAAM+F,GACtD9F,EAAGmC,MAAMyD,iBAETC,gBAAgB5G,KAAKY,KAArBgG,2CAoCM9F,GACV,IAAIgG,EAAUlF,KAAKC,IAALC,MAAAF,KAAIG,EAASjB,EAAKmB,IAAI,SAAA4D,GAAG,OAAIA,EAAIpE,WAE/C,OADeX,EAAKiG,OAAO,SAAAC,GAAI,OAAIA,EAAKvF,SAAWqF,6CAMtCE,GACb,IAAI/B,KACAgC,EAAW,EAkBf,OAjBAD,EAAKpB,QAAQ,SAACC,EAAKT,GAGfS,EAAID,QAAQ,SAAC1D,GAET+E,GAAY,EACZ/E,EAAOiD,GAAK8B,EACZ/E,EAAOkD,QAAUA,EAEjB,IAAIyB,EAAQ3E,EAAO6D,QACfc,KAAS5B,EACTA,EAAQ4B,GAAOjC,KAAK1C,GAEpB+C,EAAQ4B,IAAU3E,OAIvB+C","file":"mauve-viewer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","\nconst schemeCategory20 = [\n    '#1f77b4',\n    '#aec7e8',\n    '#ff7f0e',\n    '#ffbb78',\n    '#2ca02c',\n    '#98df8a',\n    '#d62728',\n    '#ff9896',\n    '#9467bd',\n    '#c5b0d5',\n    '#8c564b',\n    '#c49c94',\n    '#e377c2',\n    '#f7b6d2',\n    '#7f7f7f',\n    '#c7c7c7',\n    '#bcbd22',\n    '#dbdb8d',\n    '#17becf',\n    '#9edae5'\n]\n\nmodule.exports =  {\n    schemeCategory20\n}","/**\n * mauve-viewer.js\n *\n * A JS/d3.js Mauve Viewer\n *\n * Author(s): nconrad\n *\n */\n\nimport {schemeCategory20} from './colors';\n\nexport default class MauveViewer {\n    constructor(params){\n        this.ele = params.ele;\n        this.data = params.data;\n        this.d3 = params.d3;\n\n        this.init();\n    }\n\n    init() {\n        this.ele.innerHTML = `\n            <div class=\"mauve-viewer\">\n                <div class=\"mv-header\" style=\"text-align: left;\">\n                    <h4 class=\"title\">Mauve Viewer (Alpha)</h4>\n                    <div class=\"help-text\">\n                        <b>Tips:</b> click and drag to pan; use mouse wheel or double click to zoom.\n                    </div><br>\n                    <button class=\"reset-btn\">Reset</button><br>\n                </div>\n                <br>\n                <div class=\"mv-chart\">\n                    <svg></svg>\n\n                    <div style=\"position: relative;\">\n                        <div class=\"mv-context-menu\" style=\"display: none;\">\n                            <ul>\n                                <li id=\"nucleotide-align\">Align by nucleotide</li>\n                                <li>Another item</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>`\n\n        this.render(this.d3, this.data);\n    }\n\n    render(d3, data) {\n        console.log('data', data)\n\n        const genomeRegions = this.getGenomeRegions(data);\n        const trackCount = Object.keys(genomeRegions).length;\n\n        // number of LCBs; assuming every track has same number of regions\n        const numOfLCBs = genomeRegions[1].length;\n\n        // get highest end value\n        const endMax = Math.max( ...[].concat.apply([], data).map(region => region.end));\n        let xLength = endMax + 100;\n\n\n        // clear svg\n\n        console.log(this.ele.querySelector('svg'))\n        d3.select(this.ele.querySelector('svg')).remove();\n        const svg = d3.select(this.ele.querySelector('.mv-chart')).append(\"svg\")\n            .attr('width', 1000)\n            .attr('height', trackCount * 165)\n\n\n        const width = +svg.attr(\"width\"),\n            height = +svg.attr(\"height\");\n\n\n        let zoom = d3.zoom()\n            .scaleExtent([1, 150])\n            .translateExtent([[-2000, 0], [width + 90, height + 100]])\n            .on(\"zoom\", zoomed)\n\n        svg.on(\"dblclick.zoom\", null);\n\n\n        let x;\n        let trackOffset = 140,\n            marginTop = 20;\n\n\n        // create axises\n        let axises = [],\n            gXs = [],\n            xScales = [];\n\n        for (let i = 0; i < trackCount; i++) {\n            x = d3.scaleLinear()\n                .domain([0, xLength])\n                .range([0, width + 1]);\n\n            let xAxis = d3.axisBottom(x)\n                .ticks((width + 2) / (height + 2) * 10)\n                .tickSize(10)\n\n            let gX = svg.append(\"g\")\n                .attr(\"class\", `axis axis-x-${i}`)\n                .call(xAxis)\n                .attr(\"transform\", `translate(0, ${(marginTop + i * (trackOffset + 0 ))})`);\n\n            // add names\n            svg.append('text')\n                .attr('x', 10)\n                .attr('y', marginTop + i * (trackOffset) - 2) // -2 padding\n                .text(genomeRegions[i+1][0].name)\n                .attr(\"font-family\", \"sans-serif\")\n                .attr(\"font-size\", \"10px\")\n                .attr(\"fill\", '#aaaaaa');\n\n            axises.push(xAxis);\n            gXs.push(gX);\n            xScales.push(x);\n        }\n\n\n        let yPos = 50, // distance from x-axis\n            h = 20; // height of rectangles (regions)\n\n        // for each track, generate rectangles\n        for (let trackIdx = 1; trackIdx <= trackCount; trackIdx++) {\n            let regions = genomeRegions[trackIdx];\n\n            let g = svg.select('g')\n                .append('g')\n                .attr('class', `track track-${trackIdx}`)\n\n            // add regions\n            g.selectAll('rect')\n                .data(regions)\n                .enter()\n                .append('rect')\n                .attr('class', d => `region region-track-${trackIdx} region-${d.id} group-${d.groupID}`)\n                .attr('x', d => x(d.start))\n                .attr('y', d => getRegionYPos(trackIdx, d.strand))\n                .attr('width', d => x(d.end - d.start))\n                .attr('height', h)\n                .attr('stroke', '#fffff')\n                .attr('fill', d =>  schemeCategory20[(d.groupID % numOfLCBs) % 20] )\n        }\n\n        // add hover cursor lines, initially without x position\n        let hoverLines = [];\n        for (let i=1; i <= trackCount; i++) {\n            let yPos = getRegionYPos(i, '-');\n            let line = svg.append('line')\n                .attr('class', 'hover-line')\n                .style('stroke', '#222' )\n                .attr('y1', yPos - 20)\n                .attr('y2', yPos + 65)\n\n            hoverLines.push(line);\n        }\n\n        resetHover(x);\n\n        // compute all LCB midpoints as list of objects\n        let midSets = [];\n        data.forEach((lcb) => {\n\n            let lcbMids = []\n            lcb.forEach(l => {\n                let i = l.lcb_idx - 1;  // make indexed\n                lcbMids.push({\n                    start: l.start,\n                    end: l.end,\n                    x:  x(l.start) + ( (x(l.end) - x(l.start))  / 2 ) ,\n                    y: marginTop + getRegionYPos(i+1, l.strand) + (h/2)\n                });\n            })\n\n            midSets.push(lcbMids);\n        })\n\n        // draw connections\n        let lineFunction = d3.line()\n            .x(d => d.x)\n            .y(d => d.y)\n\n        midSets.forEach((set, i) => {\n            svg.datum(set)\n                .insert(\"path\",\":first-child\")\n                .attr('class', 'lcb-line')\n                .attr(\"d\", lineFunction(set))\n                .attr(\"stroke-width\", 1)\n                .attr('stroke', schemeCategory20[i % 20])\n                .attr('fill', 'none')\n\n        })\n\n        d3.select(this.ele.querySelector('.reset-btn'))\n            .on(\"click\", reset);\n\n\n        svg.call(zoom);\n\n        /*\n        d3.select('#shift-btn').on(\"click\", shift)\n        function shift() {\n            // update axis\n            gXs[0].transition().tween(\"axis\", function(d) {\n                let i = d3.interpolate(\n                    [xScales[0].domain()[0], xScales[0].domain()[1]],\n                    [xScales[0].domain()[0] - 300000, xScales[0].domain()[1] - 300000]\n                );\n\n                return function(t) {\n                    xScales[0].domain(i(t));\n                    gXs[0].call(axises[0]);\n\n                    let newScale = xScales[0];\n\n                    // Need to update contents as well\n                    d3.selectAll('.region-track-1')\n                        .attr(\"x\", (d) => newScale(d.start) );\n\n\n                    // scale lines\n                    d3.selectAll('path.lcb-line')\n                        .attr(\"d\", d => {\n\n                            let old = d[0];\n                            // only rescale first track\n                            d[0] = {\n                                start: old.start,\n                                end: old.end,\n                                x: newScale(old.start) + ( (newScale(old.end) - newScale(old.start))  / 2 ),\n                                y: old.y\n                            }\n\n                            return lineFunction(d)\n                        });\n\n                    resetHover(newScale);\n                }\n            });\n        }\n        */\n\n        function zoomed() {\n\n            let newScale = d3.event.transform.rescaleX(xScales[2]);\n\n            // for each axis, scale\n            for (let i = 0; i < axises.length; i++) {\n                let gX = gXs[i],\n                    xAxis = axises[i],\n                    x = xScales[i];\n                gX.call(xAxis.scale(d3.event.transform.rescaleX(x)));\n            }\n\n            // scale rectangles\n            let srcEvent = d3.event.sourceEvent;\n            if (!srcEvent || srcEvent.type === 'wheel' || srcEvent.type === 'click') {\n                d3.selectAll('.region')\n                    .attr('x', (d) => newScale(d.start))\n                    .attr(\"width\", (d) => newScale(d.end) - newScale(d.start))\n            } else if ((d3.event.sourceEvent.type === 'mousemove')) {\n                d3.selectAll('.region')\n                    .attr(\"x\", (d) => newScale(d.start) );\n            }\n\n            // scale lines\n            d3.selectAll('path.lcb-line')\n                .attr(\"d\", d => {\n                    let set = d.map(p => {\n                        return {\n                            start: p.start,\n                            end: p.end,\n                            x: newScale(p.start) + ( (newScale(p.end) - newScale(p.start))  / 2 ),\n                            y: p.y\n                        }\n                    })\n\n                    return lineFunction(set)\n                });\n\n            // rescale hover events\n            d3.selectAll('.region')\n                .on(\"mousemove\", null)\n                .on(\"mouseover\", null)\n                .on(\"mouseenter\", null)\n                .on(\"mouseleave\", null)\n                .on(\"mouseout\", null)\n            resetHover(newScale);\n        }\n\n\n\n        function resetHover(scale) {\n            let x = scale;\n            let lines = hoverLines;\n\n            svg.selectAll('.region').on(\"mousemove\", function(d) {\n                let groupID = d.groupID;\n\n                let xPos = d3.mouse(this)[0],\n                    trackIdx = d.lcb_idx,\n                    hoverStrand = d.strand;\n\n                // need relative position for other tracks\n                let relXPos = xPos - x(d.start);\n\n                // draw cursor line for rect being hovered\n                lines[trackIdx-1]\n                    .attr('x1', xPos)\n                    .attr('x2', xPos)\n\n                // draw cursor line for other rects\n                svg.selectAll(`.group-${groupID}`).each(d => {\n                    // need to skip rect that is being hovered on\n                    if (d.lcb_idx === trackIdx) return;\n\n                    // need to compute relative position based on strand\n                    let nextXPos;\n                    if (hoverStrand !== d.strand) {\n                        nextXPos = x(d.end) - relXPos; // start + positition relative to other blocks\n                    } else {\n                        nextXPos = x(d.start) + relXPos; // start + positition relative to other blocks\n                    }\n\n                    lines[d.lcb_idx-1]\n                        .attr('x1', nextXPos)\n                        .attr('x2', nextXPos)\n                })\n            })\n\n            svg.selectAll('.region')\n                .on(\"mouseover\", function(d) {\n                    for (let i=0; i < lines.length; i++) {\n                        lines[i].attr(\"opacity\", 1.0);\n                    }\n                })\n                .on(\"mouseout\", function(d) {\n                    for (let i=0; i < lines.length; i++) {\n                        lines[i].attr(\"opacity\", 0);\n                    }\n                });\n        }\n\n\n        svg.selectAll('.hover-line').on('contextmenu', function() {\n            d3.event.preventDefault();\n\n            showContextMenu.bind(this)()\n        })\n\n\n        // show / hide context menu\n        svg.selectAll('.region').on('contextmenu', function(data, index) {\n            d3.event.preventDefault();\n\n            showContextMenu.bind(this)()\n        });\n\n\n        /* content menu\n        d3.select('#nucleotide-align').on('click', (d) => {\n            d3.select('#mv-context-menu').style('display', 'none');\n        })\n\n        function showContextMenu() {\n            let pos = d3.mouse(this);\n            d3.select('#mv-context-menu')\n                .style('position', 'absolute')\n                .style('left', `${pos[0]}px`)\n                .style('top', `${pos[1]}px`)\n                .style('display', 'block');\n\n            // close on click\n            svg.on('click', () => {\n                d3.select('#mv-context-menu').style('display', 'none');\n            })\n        }\n        */\n\n        function reset() {\n            zoom.transform(svg, d3.zoomIdentity);\n        }\n\n        function getRegionYPos(trackIdx, strandDirection ) {\n            return (strandDirection === '-' ? yPos + h : yPos) + ((trackIdx-1) * trackOffset);\n        }\n\n    }\n\n    // gets lcbs that have entry for every organism\n    // deprecated(?)\n    getSharedLCBs(data) {\n        let maxRows = Math.max( ...data.map(lcb => lcb.length) );\n        let filtered = data.filter(lcbs => lcbs.length === maxRows);\n        return filtered;\n    }\n\n    // gets regions for each organism (index); adding ids\n    // also returns connections of regions\n    getGenomeRegions(lcbs) {\n        let regions = {};\n        let regionID = 0;\n        lcbs.forEach((lcb, groupID) => {\n            //lcb.reverse(); // consider last index reference genome\n\n            lcb.forEach((region) => {\n                // increment/add ids to regions\n                regionID += 1;\n                region.id = regionID;\n                region.groupID = groupID;\n\n                let index = region.lcb_idx;\n                if (index in regions)\n                    regions[index].push(region);\n                else\n                    regions[index] = [region];\n            })\n        })\n\n        return regions;\n    }\n\n}\n"],"sourceRoot":""}